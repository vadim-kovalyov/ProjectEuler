namespace ProjectEuler

// Problem 1:
// If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.
// Find the sum of all the multiples of 3 or 5 below 1000.
module Problem1 =

    let multiplesOf3 x = x % 3 = 0
    let multiplesOf5 x = x % 5 = 0

    let filter x = (multiplesOf3 x) || (multiplesOf5 x)

    let problem1 x =
        [0..x]
        |> List.filter filter
        |> List.sum

    printfn "%d" (problem1 999)


// Problem 2:
// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
module Problem2 =
    let fib = 1
